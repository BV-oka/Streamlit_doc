# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É streamlit
import streamlit as st
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É pandas
import pandas as pd
import numpy as np



# –ù–∞–∑–≤–∞–Ω–∏–µ
st.title("–ü–µ—Å–æ—á–Ω–∏—Ü–∞")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.header("–≠—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫")

# –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
st.subheader("–≠—Ç–æ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫")

# –¢–µ–∫—Å—Ç
st.text("–ü—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç")


# –ø–æ–ª–æ—Å–∫–∏
st.divider()
st.divider()

st.success("Success")
st.info("Information")
st.warning("Warning")
st.error("Error")
# st.snow()
# st.balloons()

if st.button('–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è'):
  st.write('–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!')


df = pd.DataFrame({
  'first column': [1, 2, 3, 4],
  'second column': [10, 20, 30, 40]
})

df


st.divider()

st.write("Here's our first attempt at using data to create a table:")
st.write(pd.DataFrame({
    'first column': [1, 2, 3, 4],
    'second column': [10, 20, 30, 40]
}))

# —Ç–∞–±–ª–∏—á–∫–∏

# –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—á–∫–∞
st.text("–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—á–∫–∞")

dataframe = np.random.randn(10, 20)
st.dataframe(dataframe)

# –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
st.text("–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—á–∫–∞ —Å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º")

dataframe = pd.DataFrame(
    np.random.randn(10, 20),
    columns=('col %d' % i for i in range(20)))

st.dataframe(dataframe.style.highlight_max(axis=0))

# —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—á–∫–∞

dataframe = pd.DataFrame(
    np.random.randn(10, 20),
    columns=('col %d' % i for i in range(20)))
st.table(dataframe)


# –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
status = st.radio("–≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç: ", ('–¥–∞', '–Ω–µ—Ç'))

if (status == '–¥–∞'):
    st.success("–¥–∞")
else:
    st.success("–Ω–µ—Ç")
    
  

status = st.radio("–≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç: ", ('–¥–∞', '–Ω–µ—Ç'), horizontal=True)

if (status == '–¥–∞'):
    st.success("–¥–∞")
else:
    st.success("–Ω–µ—Ç")
    st.snow()



genre = st.radio(
    "What's your favorite movie genre",
    [":rainbow[Comedy]", "***Drama***", "Documentary :movie_camera:"],
    captions = ["Laugh out loud.", "Get the popcorn.", "Never stop learning."])

if genre == ':rainbow[Comedy]':
    st.success('You selected comedy.')
else:
    st.write("You didn\'t select comedy.")


option = st.selectbox(
    'How would you like to be contacted?',
    ('Email', 'Home phone', 'Mobile phone'))

st.write('You selected:', option)


# —Å–ª–∞–π–¥–µ—Ä—ã

# age = st.slider('How old are you?', 0, 130, 25)
# st.write("I'm ", age, 'years old')



values = st.slider(
    'Select a range of values',
    0.0, 100.0, (25.0, 75.0))
st.write('Values:', values)



# —Å –ø–æ–º–æ—â—å—é st.line_chart(). –ú—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≤—ã–±–æ—Ä–∫—É —Å –ø–æ–º–æ—â—å—é Numpy, –∞ –∑–∞—Ç–µ–º –Ω–∞–Ω–µ—Å–µ–º –µ–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫.

chart_data = pd.DataFrame(
     np.random.randn(20, 3),
     columns=['a', 'b', 'c'])

st.line_chart(chart_data)

# –≥—Ä–∞—Ñ–∏–∫

chart_data = pd.DataFrame(
     np.random.randn(20, 3),
     columns=['–º—É–∂', '–∂–µ–Ω', '–¥–µ—Ç–∏'])

st.line_chart(chart_data)

# "Energy Costs By Month"

chart_data = pd.DataFrame(
     [10, 13, 11],
     columns=["Energy Costs"])
 
st.bar_chart(chart_data)

# –≥—Ä–∞—Ñ–∏–∫–∏ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü—É
dfopr=pd.DataFrame([[101, 'ivanov', '–º—É–∂', '–¥–∞'], [102, '–ø–µ—Ç—Ä–æ–≤', '–º—É–∂', '–Ω–µ—Ç'], [103, '—Å–∏–¥–æ—Ä–æ–≤–∞', '–∂–µ–Ω', '–¥–∞'], [104, '–∫–æ—Ä–æ–≤–∏–Ω', '–º—É–∂', '–Ω–µ—Ç'], [105, '–∫—É–∑–Ω–µ—Ü–æ–≤', '–º—É–∂', '–¥–∞'], [106, '–¥—É–±–æ–≤–∞', '–∂–µ–Ω', '–Ω–µ—Ç'], [107, '–∑–∞–π–∫–∏–Ω–∞', '–∂–µ–Ω', '–¥–∞']], columns=['id', 'fio', 'gender', 'otvet'])
dfopr
val_count  = dfopr['gender'].value_counts()
val_count
df1 = dfopr['gender'].value_counts().rename_axis('unique_values').reset_index(name='counts')
st.bar_chart(data=df1, x='unique_values', y='counts')


dfopr1=pd.DataFrame([['Earth', 1], ['Moon', 0.606], ['Mars', 0.107], ['–í–µ–Ω–µ—Ä–∞', 0.807]], columns=['name', 'mass'])
st.bar_chart(data=dfopr1, x='name', y='mass')

st.markdown("# –¢—É—Ä–∏–∑–º")
st.sidebar.markdown("# –≥–ª–∞–≤–Ω–∞—è page üéà")


# –ù–∞–∑–≤–∞–Ω–∏–µ
st.sidebar.title("—á—Ç–æ-—Ç–æ")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.header("–º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥ –ê–ª–µ–∫—Å–∏–Ω")

# –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
st.subheader("–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é —Ç—É—Ä–∏–∑–º–∞")

# –ø–æ–ª–æ—Å–∫–∞
st.sidebar.divider()

# –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø–æ–ª–∞
gender = st.sidebar.radio("–≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤: ", ('–≤—Å–µ','–º—É–∂','–∂–µ–Ω'), horizontal=True)

# –µ—â—ë –ø–æ–ª–æ—Å–∫–∞
st.sidebar.divider()

# –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–æ–∑—Ä–∞—Å—Ç–∞
age = st.sidebar.radio("—É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤: ", ('–≤—Å–µ','–¥–æ 35', '36-45','46-55', '—Å—Ç–∞—Ä—à–µ 55'), horizontal=False)

# –µ—â—ë –ø–æ–ª–æ—Å–∫–∞
st.sidebar.divider()

# –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è
att = st.sidebar.radio("—É–∫–∞–∂–∏—Ç–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –∫ —Ç—É—Ä–∏—Å—Ç–∞–º: ", ('–≤—Å–µ','–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ', '–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ'), horizontal=False)

# –µ—â—ë –ø–æ–ª–æ—Å–∫–∞
st.sidebar.divider()

st.success("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤:")

col1, col2, col3 = st.columns(3)
col1.metric(label="–ø–æ–ª", value=gender)
col2.metric(label="–≤–æ–∑—Ä–∞—Å—Ç", value=age)
col3.metric(label="–æ—Ç–Ω–æ—à–µ–Ω–∏–µ", value=att)


if gender == '–º—É–∂':
    st.sidebar.write("–≤—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –º—É–∂—á–∏–Ω –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ", age)
else:
    st.sidebar.write("–≤—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –∂–µ–Ω—â–∏–Ω –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ", age)
    
# –µ—â—ë –ø–æ–ª–æ—Å–∫–∞
st.sidebar.divider()





